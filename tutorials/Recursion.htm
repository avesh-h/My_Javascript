<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <input type="number" id="input" />
    <p id="output"></p>
    <script>

// function multiply(arr, n) {
//     if (n <= 0) {
//       return 1;
//     } else {
//         return multiply(arr, n - 1) * arr[n - 1];
//     }
//   }
//   let arr = [5,5,5,5]
//   console.log(multiply(arr,arr.length))

        //Total of array
    //    let arr2=[1,2,3,4,5]
    //    const countTotal = (arr,n)=>{
    //     if(n<=0){
    //         return 0;
    //     }
    //     else{
    //         return countTotal(arr,n-1) + arr[n-1]
    //     }
        
    // }
    // countTotal(arr2,arr2.length)

    // console.log(countTotal(arr2,arr2.length))

 //Add numbers in Array
    // let arr=[]
    // const addVal = (n)=>{
    //     if(n>6){
    //         return arr
    //     }
    //     else{
    //         arr.push(n)
    //     }
    //     return addVal(n+1)
    // }

    // addVal(1)
    // console.log(arr)



//Add range of number inside array
// function rangeOfNumbers(startNum, endNum) {
// if(startNum > endNum){
//   return []
// }

// else{
//   const myArr = rangeOfNumbers(startNum + 1,endNum)
//   myArr.unshift(startNum)
//   return myArr
// }

// };

// console.log(rangeOfNumbers(1,1))


//Recursion analysis

// function countup(n) {
//   if (n < 1) {
//       console.log("Inside",n)
//       debugger
//       return [];
//     } else {
//         console.log("Outside",n)
//         debugger
//     const countArray = countup(n - 1);
//     console.log("Third debgger",n)
//     debugger
//     countArray.push(n);
//     return countArray;
//   }
// }
// console.log(countup(5));



//Factorial
// function factorial(num){
//     if(num === 0){
//         return 1
//     }
//     return num * factorial(num - 1)
// }

// console.log(factorial(5));



//Table  it will returns the array full of results
// function table(num,t){
//     if(t === 0){
//         return [];
//     }
//      let myVals = table(num,t-1)
//      myVals.push(num*t) 
//      return myVals
// }

// console.log(table(2,10))


// let arr = [10, 20, 30, 40, 50];

// for (let i = 1; i < arr.length; i++) {
//   let currentValue = arr[i];
//   let previousValue = arr[i - 1];
//   console.log(`The current value is ${currentValue} and the previous value is ${previousValue}`);
// }



// var printNumTwo;
// for (var i = 0; i < 3; i++) {
//   if (i === 2) {
//     printNumTwo = function() {
//       return i;
//     };
//   }
// }
// console.log(printNumTwo());


// Blocking scope of var and let
// (function blockScope(){
//     var i = 3
//     if(true){
//         var i = 5
//         console.log(i)
//     }
//     console.log(i)
// })();


// const factFunc= (num)=>{
//     if(num < 1){
//         debugger
//         console.log("1st if")
//         return 1
//     }
//     debugger
//     console.log("else")
//     return num * factFunc(num -1)
// }

// result = factFunc(5)
// console.log(result)

// let my_pbj = {
//     name:"avesh",
//     age:22,
//     job:"Programmer"
// }

// console.log(Object.entries(my_pbj))

    let getInput = document.getElementById('input')
    let showValue = document.getElementById('output')

    getInput.addEventListener('input',(e)=>{
        let target = 3
        let nextValueArr = []
        let getValue = Number(e.target.value)
        if(getValue < 0){
            showValue.textContent = "enter a positive value"
        }
        else if(getValue){
            for (let i=1;i<=target;i++){
                getValue+=2
                nextValueArr.push(getValue)
            }
            showValue.textContent = nextValueArr.join(",")
        }
        else{
            showValue.textContent = " " 
        }
    })

    </script>
</body>
</html>